name: Veracode Scan 

#será executada sempre que houver uma nova atualização na branch-treinamento1
on:
  push:
    branches: [ branch-treinamento1 ]
  pull_request:
    branches: [ branch-treinamento1 ]

  workflow_dispatch:

# build Maven Java para gerar o artefato .war
jobs:
  build:
    name: Build Maven
    runs-on: ubuntu-latest #executa o job dentro de uma maquina ubuntu
    steps:
    - uses: actions/checkout@v1 # puxa os arquivos do repositório para a máquina
    - name: Set up JDK 1.8
      uses: actions/setup-java@v1 # utiliza pulgin do java
      with:
        java-version: 1.8
    - name: Build with Maven # realiza o comando Maven para build da app
      run: |
        mvn clean package install
        pwd
        ls -l  
    # salva o verademo.war para ser usado no Policy Scan e Pipeline Scan
    - name: Salvando artefato
      uses: actions/upload-artifact@v3
      with:
          name: verademo.war
          path: target/verademo.war

  Veracode_Policy_Scan:
    name: Veracode Policy Scan
    runs-on: ubuntu-latest
    needs: [build] # executa apenas após o job do build concluir
    steps:
      - uses: actions/checkout@v2
      - name: get archive
        uses: actions/download-artifact@v3 # realiza o download do verademo.war
        with:
          name: verademo.war
          path: .
      - name: Veracode Policy Scan
        uses: veracode/veracode-uploadandscan-action@0.2.4 # usa o plugin oficial da veracode para executar o scan
        with:
          appname: 'Java-VeraDemo' # nome do perfil cadastrado na Veracode
          createprofile: true # nao cria um perfil novo
          filepath: 'target/verademo.war' # busca pelo artefato buildado para subir para o scan
          vid: '${{ secrets.VID }}' # credencial api
          vkey: '${{ secrets.VKEY }}' # credencial api
          deleteincompletescan: 2     # se tiver um scan travado ele apaga e inicia um novo

  Veracode_Pipeline_Scan:
    name: Veracode Pipeline Scan
    runs-on: ubuntu-latest
    needs: [Veracode_Policy_Scan] # executa apenas após o job do Policy Scan concluir
    container: 
      image: veracode/pipeline-scan:latest  # utiliza o container oficial da Veracode para realizar o Pipeline Scan
      options: --user root # utiliza o container com usuario root para não ter restrição
    steps:
      - uses: actions/checkout@v2
      - name: get archive
        uses: actions/download-artifact@v3  # download do verademo.war para ser usado
        with:
          name: verademo.war
          path: .
      - name: Veracode Pipeline Scan
        run: |
          java -jar /opt/veracode/pipeline-scan.jar -vid ${{ secrets.VID }} -vkey ${{ secrets.VKEY }} -f target/verademo.war -pn "Veracode Recommended High"
